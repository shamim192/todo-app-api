## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Task Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: 'Buy groceries'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: 'Milk, Bread, Cheese'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      is_completed:
        name: is_completed
        description: 'The completion status of the task.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Buy groceries'
      description: 'Milk, Bread, Cheese'
      is_completed: false
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Task created successfully.",
            "data": {
              "id": 1,
              "title": "Buy groceries",
              "description": "Milk, Bread, Cheese",
              "is_completed": false,
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation errors",
            "data": {
              "title": [
                "The title field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Tasks retrieved successfully.",
            "data": [
              {
                "id": 1,
                "title": "Task title",
                "description": "Task description",
                "is_completed": false,
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Task retrieved successfully.",
            "data": {
              "id": 1,
              "title": "Buy groceries",
              "description": "Milk, Bread, Cheese",
              "is_completed": false,
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: 'Buy groceries'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: 'Milk, Bread, Cheese'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      is_completed:
        name: is_completed
        description: 'The completion status of the task.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Buy groceries'
      description: 'Milk, Bread, Cheese'
      is_completed: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Task updated successfully.",
            "data": {
              "id": 1,
              "title": "Buy groceries
              "description": "Milk, Bread, Cheese",
              "is_completed": false,
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation errors",
            "data": {
              "title": [
                "The title field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Task deleted successfully.",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Task not found",
            "data": null
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
